#!/usr/bin/env python3

import yaml
from argparse import ArgumentParser
from config import Config
from config_command import add_default_config_args, handle_config_command, init_config_parser
from data import init_update_parser, handle_update_command
from auctions import init_auction_parser, handle_auction_command
from pathlib import Path

def main():
    parser = ArgumentParser()
    add_default_config_args(parser)

    parsers = parser.add_subparsers(dest="command")
    config_parser = parsers.add_parser("config", help="Reads and writes the global config data")
    init_config_parser(config_parser)
    
    update_parser = parsers.add_parser("update", help="Updates static game data ")
    init_update_parser(update_parser)

    auctions_parser = parsers.add_parser("auctions", help="Compute AH information")
    init_auction_parser(auctions_parser)


    args = parser.parse_args(["auctions", "profit"])

    config = Config()
    config.load()
    config.update_from_args(args)

    if args.command == "config":
        exit(handle_config_command(args, config))
    
    if not config.validate:
        print("Invalid config, call hogo config init first")
        exit(1)
    ret = 0
    if args.command == "update":
        ret = handle_update_command(args, config)
    elif args.command == "auctions":
        ret = handle_auction_command(args, config)
    
    exit(ret)


if __name__=="__main__":
    main()
